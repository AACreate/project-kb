{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"project \"KB\" \u00b6 Project KB supports the creation, management and aggregation of a distributed, collaborative knowledge base of vulnerabilities that affect open-source software. This repository contains both a tool and vulnerability data . Additionally, the MSR2019 folder contains the package associated with the paper we published at the Mining Software Repository conference in 2019 (see below). Why this project \u00b6 In order to feed Eclipse Steady with fresh data, we have spent a considerable amount of time, in the past few years, mining and curating a knowledge base of vulnerabilities that affect open-source components. We know that other parties have been doing the same, in academia as well as in the industry. From this experience, we have learnt that with the growing size of open source ecosystems and the pace at which new vulnerabilities are discovered, the old approach cannot scale. We are also more and more convinced that vulnerability knowledge-bases about open-source should be open-source themselves and adopt the same community-oriented model that governs the rest of the open-source ecosystem. These considerations have pushed us to release our vulnerability knowledge base in early 2019. In June 2020, we made a further step releasing tool support to make the creation, aggregation, and consumption of vulnerability data much easier. We hope this will encourage more contributors to join our efforts to build a collaborative, comprehensive knowledge base where each party remains in control of the data they produce and of how they aggregate and consume data from the other sources. What can project \"KB\" be used for, in practice \u00b6 (work in progress) Project \"KB\" consists essentially of two things: a tool and a knowledge base. The tool ( kaybee ) allows users to do the following: create vulnerability statements; a vulnerability statement is a plain-text file in yaml format that contains data about a given vulnerability, such as the commits that provide a fix for it, a set of notes and references to related Web pages, a list of open-source components that are directly affected by the vulnerability at hand, and so on. fetch vulnerability statements from one or more remote sources (git repositories) merge the content of multiple sources of statements, based on a conflict resolution policy export the result of the merge operation to a variety of different formats The knowledge base , offers a set of vulnerability statements that can be consumed using the kaybee tool. Getting started \u00b6 Installing the kaybee tool \u00b6 Importing vulnerability data in Eclipse Steady \u00b6 The steps that are required to import the knowledge base in Eclipse Steady are described in this tutorial . Further information can be found here . Publications \u00b6 In early 2019, a snapshot of the knowlege base from project \"KB\" was described in: Serena E. Ponta, Henrik Plate, Antonino Sabetta, Michele Bezzi, C\u00e9dric Dangremont, A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software , MSR, 2019 If you use the dataset for your research work, please cite it as: @inproceedings{ponta2019msr, author={Serena E. Ponta and Henrik Plate and Antonino Sabetta and Michele Bezzi and C\u00b4edric Dangremont}, title={A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software}, booktitle={Proceedings of the 16th International Conference on Mining Software Repositories}, year=2019, month=May, } MSR 2019 DATA SHOWCASE SUBMISSION : please find here the data and the scripts described in that paper Credits \u00b6 Note that 3 rd party information from NVD and MITRE might have been used as input for compiling this knowledge base. See MITRE's Terms of Use for more information. Features \u00b6 Creation of vulnerability statements Retrieval and reconciliation of statement from multiple repositories, based on user-specified policies Requirements \u00b6 None, the kaybee binary is self-contained. Binary versions for Windows, Linux, MacOS are available for download . Limitations \u00b6 This project is work-in-progress. The vulnerability knowledge base only contains information about vulnerabilities in Java and Python open source components. Known Issues \u00b6 The list of current issues is available here . Feel free to open a new issue if you think you found a bug or if you have a feature request. How to obtain support \u00b6 For the time being, please use GitHub issues both to report bugs and to request help. Documentation and better support channels will come soon. License \u00b6 Copyright \u00a9 2020 SAP SE or an SAP affiliate company. All rights reserved. This project is licensed under the Apache Software License, v.2 except as noted otherwise in the LICENSE file .","title":"Home"},{"location":"#project-kb","text":"Project KB supports the creation, management and aggregation of a distributed, collaborative knowledge base of vulnerabilities that affect open-source software. This repository contains both a tool and vulnerability data . Additionally, the MSR2019 folder contains the package associated with the paper we published at the Mining Software Repository conference in 2019 (see below).","title":"project \"KB\""},{"location":"#why-this-project","text":"In order to feed Eclipse Steady with fresh data, we have spent a considerable amount of time, in the past few years, mining and curating a knowledge base of vulnerabilities that affect open-source components. We know that other parties have been doing the same, in academia as well as in the industry. From this experience, we have learnt that with the growing size of open source ecosystems and the pace at which new vulnerabilities are discovered, the old approach cannot scale. We are also more and more convinced that vulnerability knowledge-bases about open-source should be open-source themselves and adopt the same community-oriented model that governs the rest of the open-source ecosystem. These considerations have pushed us to release our vulnerability knowledge base in early 2019. In June 2020, we made a further step releasing tool support to make the creation, aggregation, and consumption of vulnerability data much easier. We hope this will encourage more contributors to join our efforts to build a collaborative, comprehensive knowledge base where each party remains in control of the data they produce and of how they aggregate and consume data from the other sources.","title":"Why this project"},{"location":"#what-can-project-kb-be-used-for-in-practice","text":"(work in progress) Project \"KB\" consists essentially of two things: a tool and a knowledge base. The tool ( kaybee ) allows users to do the following: create vulnerability statements; a vulnerability statement is a plain-text file in yaml format that contains data about a given vulnerability, such as the commits that provide a fix for it, a set of notes and references to related Web pages, a list of open-source components that are directly affected by the vulnerability at hand, and so on. fetch vulnerability statements from one or more remote sources (git repositories) merge the content of multiple sources of statements, based on a conflict resolution policy export the result of the merge operation to a variety of different formats The knowledge base , offers a set of vulnerability statements that can be consumed using the kaybee tool.","title":"What can project \"KB\" be used for, in practice"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#installing-the-kaybee-tool","text":"","title":"Installing the kaybee tool"},{"location":"#importing-vulnerability-data-in-eclipse-steady","text":"The steps that are required to import the knowledge base in Eclipse Steady are described in this tutorial . Further information can be found here .","title":"Importing vulnerability data in Eclipse Steady"},{"location":"#publications","text":"In early 2019, a snapshot of the knowlege base from project \"KB\" was described in: Serena E. Ponta, Henrik Plate, Antonino Sabetta, Michele Bezzi, C\u00e9dric Dangremont, A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software , MSR, 2019 If you use the dataset for your research work, please cite it as: @inproceedings{ponta2019msr, author={Serena E. Ponta and Henrik Plate and Antonino Sabetta and Michele Bezzi and C\u00b4edric Dangremont}, title={A Manually-Curated Dataset of Fixes to Vulnerabilities of Open-Source Software}, booktitle={Proceedings of the 16th International Conference on Mining Software Repositories}, year=2019, month=May, } MSR 2019 DATA SHOWCASE SUBMISSION : please find here the data and the scripts described in that paper","title":"Publications"},{"location":"#credits","text":"Note that 3 rd party information from NVD and MITRE might have been used as input for compiling this knowledge base. See MITRE's Terms of Use for more information.","title":"Credits"},{"location":"#features","text":"Creation of vulnerability statements Retrieval and reconciliation of statement from multiple repositories, based on user-specified policies","title":"Features"},{"location":"#requirements","text":"None, the kaybee binary is self-contained. Binary versions for Windows, Linux, MacOS are available for download .","title":"Requirements"},{"location":"#limitations","text":"This project is work-in-progress. The vulnerability knowledge base only contains information about vulnerabilities in Java and Python open source components.","title":"Limitations"},{"location":"#known-issues","text":"The list of current issues is available here . Feel free to open a new issue if you think you found a bug or if you have a feature request.","title":"Known Issues"},{"location":"#how-to-obtain-support","text":"For the time being, please use GitHub issues both to report bugs and to request help. Documentation and better support channels will come soon.","title":"How to obtain support"},{"location":"#license","text":"Copyright \u00a9 2020 SAP SE or an SAP affiliate company. All rights reserved. This project is licensed under the Apache Software License, v.2 except as noted otherwise in the LICENSE file .","title":"License"},{"location":"contributing/","text":"How to contribute to project \"KB\" \u00b6 Do you intend to contribute with new vulnerability data? \u00b6 A structured process to create and share vulnerability data is work in progress. Until it is defined, we invite you to just create pull requests in order to submit new vulnerability data, using and existing statement as a template. Your statement should provide, at least, a vulnerability identifier (use the CVE identifier if it exists), the URL of the source code repository of the affected component and one or more identifiers of the commits used to fix the vulnerability. Did you find a bug? \u00b6 Ensure the bug was not already reported by searching on GitHub under Issues . If you're unable to find an open issue addressing the problem, open a new one . Be sure to include a title and clear description , as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring. Did you write a patch that fixes a bug? \u00b6 Open a new GitHub pull request with the patch. Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable. Add one or more test cases as appropriate Make sure all other tests and checks still pass (that is, run make check in the kaybee folder; it should succeed) Did you fix whitespace, format code, or make a purely cosmetic patch? \u00b6 Changes that are cosmetic in nature and do not add anything substantial to the stability, functionality, or testability are accepted at this time. Do you intend to add a new feature or change an existing one? \u00b6 Suggest your change by creating an issue and start writing code in your own fork and make a PR when ready. Please make sure you provide tests for your code, and ensure you can successfully execute make check (in the kaybee folder) with no errors and that you include adequate documentation in your code. Do you have questions about the source code? \u00b6 For now, file an issue (we consider that the need of clarifications at this stage indicates missing or inadequate documentation). Do you want to contribute to the documentation? \u00b6 You are most welcome to do so, project \"KB\" needs every one of you to succeed, every drop matters! Thanks! :heart: :heart: :heart: The project \"KB\" team","title":"Contributing"},{"location":"contributing/#how-to-contribute-to-project-kb","text":"","title":"How to contribute to project \"KB\""},{"location":"contributing/#do-you-intend-to-contribute-with-new-vulnerability-data","text":"A structured process to create and share vulnerability data is work in progress. Until it is defined, we invite you to just create pull requests in order to submit new vulnerability data, using and existing statement as a template. Your statement should provide, at least, a vulnerability identifier (use the CVE identifier if it exists), the URL of the source code repository of the affected component and one or more identifiers of the commits used to fix the vulnerability.","title":"Do you intend to contribute with new vulnerability data?"},{"location":"contributing/#did-you-find-a-bug","text":"Ensure the bug was not already reported by searching on GitHub under Issues . If you're unable to find an open issue addressing the problem, open a new one . Be sure to include a title and clear description , as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.","title":"Did you find a bug?"},{"location":"contributing/#did-you-write-a-patch-that-fixes-a-bug","text":"Open a new GitHub pull request with the patch. Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable. Add one or more test cases as appropriate Make sure all other tests and checks still pass (that is, run make check in the kaybee folder; it should succeed)","title":"Did you write a patch that fixes a bug?"},{"location":"contributing/#did-you-fix-whitespace-format-code-or-make-a-purely-cosmetic-patch","text":"Changes that are cosmetic in nature and do not add anything substantial to the stability, functionality, or testability are accepted at this time.","title":"Did you fix whitespace, format code, or make a purely cosmetic patch?"},{"location":"contributing/#do-you-intend-to-add-a-new-feature-or-change-an-existing-one","text":"Suggest your change by creating an issue and start writing code in your own fork and make a PR when ready. Please make sure you provide tests for your code, and ensure you can successfully execute make check (in the kaybee folder) with no errors and that you include adequate documentation in your code.","title":"Do you intend to add a new feature or change an existing one?"},{"location":"contributing/#do-you-have-questions-about-the-source-code","text":"For now, file an issue (we consider that the need of clarifications at this stage indicates missing or inadequate documentation).","title":"Do you have questions about the source code?"},{"location":"contributing/#do-you-want-to-contribute-to-the-documentation","text":"You are most welcome to do so, project \"KB\" needs every one of you to succeed, every drop matters! Thanks! :heart: :heart: :heart: The project \"KB\" team","title":"Do you want to contribute to the documentation?"},{"location":"dev_docs/","text":"Coming soon...","title":"Developer docs"},{"location":"faq/","text":"Frequently Asked Questions (F.A.Q.) \u00b6 Troubleshooting \u00b6 Coming soon... Misc \u00b6 What is the relation of project \"KB\" with Eclipse Steady? Eclipse Steady needs code-level data about how vulnerabilities (basically, which commit in which repository fix which vulnerability). Project \"KB\" promotes a collaborative approach to curating such data.","title":"FAQ"},{"location":"faq/#frequently-asked-questions-faq","text":"","title":"Frequently Asked Questions (F.A.Q.)"},{"location":"faq/#troubleshooting","text":"Coming soon...","title":"Troubleshooting"},{"location":"faq/#misc","text":"What is the relation of project \"KB\" with Eclipse Steady? Eclipse Steady needs code-level data about how vulnerabilities (basically, which commit in which repository fix which vulnerability). Project \"KB\" promotes a collaborative approach to curating such data.","title":"Misc"},{"location":"getting_started/","text":"Getting started with project \"KB\" \u00b6 Installation \u00b6 The installation of the kaybee tool consists in just downloading the appropriate binary for your operating system . Make sure it is executable; you might want to also ensure that it is in the $PATH , for your convenience. For example, in Linux you would put the following line in your .bashrc file: export PATH=$PATH:/usr/local/bin/kaybee (please, make sure you adjust the path to the kaybee binary as necessary) Alternatively, you can clone this repository and build it yourself (you will need go and make ). You can do so with the make command; inspecting the Makefile first is a good idea. Configuration \u00b6 The operation of the kaybee command is controlled via a configuration file and with command flags and switches (these take priority over the configuration). To create a configuration file, just run kaybee setup ; you will have to edit it manually to make it work with your particular setup (for example, the Steady endpoint is set to a dummy value in the default configuration file, you will need to change that to import data from a Steady backend). The configuration file, by default, is called kaybeeconf.yaml and is searched for in the current directory and, if it is not there, in your home. You can put the file in any location (and give it a different name), and instruct kaybee to use it with the global flag -c . For example: kaybee -c /path/to/your/configfile.yaml <command here...> Editing such a configuration file is necessary because that's were you can specify the list of sources from which you intend to retrieve vulnerability data from and a few other things, the most important of which are covered in the following. If you have just downloaded the tool, the easiest way to start configuring it is to run: kaybee setup which will create a template configuration file in the current folder. You will need to edit it to tailor it to your needs (it contains extensive comments to guide you). At the very least, you will need to configure one or more sources, as in this example: sources: - repo: https://github.com/sap/project-kb branch: master rank: 10 Retrieving vulnerability data \u00b6 This is achieved with the command: kaybee pull The result will be a local clone of each of the sources. You can manually inspect their content and interact with them as with any other cloned git repository (that is what they are after all). Unless you only consume data from one source, this is not very useful per se: things get more interesting when you use kaybee to merge the content of different sources, which is covered next. Merging vulnerability data \u00b6 The idea underlying project \"KB\" is to allow multiple independent parties to maintain their own vulnerability data repository, and then to allow users to define how the data from these sources is to be aggregated and reconciled. This is achieved with the command: kaybee merge Unless instructed otherwise, the kaybee command will apply a conservative policy (called strict ) which will not attempt to reconcile statements that refer to the same vulnerability. This is still useful in practice if the vulnerabilities covered by different sources are mostly distinct; also, because this policy is very conservative, it is suitable for unattended executions of the tool (say, in a cron job that pulls and merges vulnerability data on a regular basis). Other policies are possible, and at the time of writing (June 2020), an experimental soft policy is under development: this policy will allow statements to be reconciled and their contents to be merged automatically (under certain conditions). The tool can be instructed to use a particular policy by setting the corresponding option in the configuration file, or via the command line flag -p , as in: kaybee merge -p strict kaybee merge -p soft Exporting vulnerability data \u00b6 The kaybee export command can be used to export statements to a number of formats. For example, this command: kaybee export -t xml or the equivalent: kaybee export --target xml examines the content of the directory .kaybee/merged , which contains the results of the last run of kaybee merge and exports the statements contained there to XML. It is important to stress that the export capabilities of kaybee are very generic, and allow users to write their own exporters to arbitrary text-based formats (called export targets , hence the -t flag). An example of a completely different export target is steady : kaybee export -t steady or equivavalently: kaybee export --target steady The result this time is a script ( steady.sh ) that can be executed to import vulnerability data to an Eclipse Steady server. To export a folder other than the default, one can use the --from option, like so: kaybee export --target steady --from /path/to/the/statements/you/wish/to/export Creating new vulnerability statements \u00b6 You can use kaybee create to create a skeleton for you to edit. Alternatively, you can take an existing statement as a reference, but this is more tedious and error prone. A check command is planned, to validate a statement. Also, a more user-friendly GUI-based wizard will probably come later on. Publishing \u00b6 To be written....","title":"Getting started"},{"location":"getting_started/#getting-started-with-project-kb","text":"","title":"Getting started with project \"KB\""},{"location":"getting_started/#installation","text":"The installation of the kaybee tool consists in just downloading the appropriate binary for your operating system . Make sure it is executable; you might want to also ensure that it is in the $PATH , for your convenience. For example, in Linux you would put the following line in your .bashrc file: export PATH=$PATH:/usr/local/bin/kaybee (please, make sure you adjust the path to the kaybee binary as necessary) Alternatively, you can clone this repository and build it yourself (you will need go and make ). You can do so with the make command; inspecting the Makefile first is a good idea.","title":"Installation"},{"location":"getting_started/#configuration","text":"The operation of the kaybee command is controlled via a configuration file and with command flags and switches (these take priority over the configuration). To create a configuration file, just run kaybee setup ; you will have to edit it manually to make it work with your particular setup (for example, the Steady endpoint is set to a dummy value in the default configuration file, you will need to change that to import data from a Steady backend). The configuration file, by default, is called kaybeeconf.yaml and is searched for in the current directory and, if it is not there, in your home. You can put the file in any location (and give it a different name), and instruct kaybee to use it with the global flag -c . For example: kaybee -c /path/to/your/configfile.yaml <command here...> Editing such a configuration file is necessary because that's were you can specify the list of sources from which you intend to retrieve vulnerability data from and a few other things, the most important of which are covered in the following. If you have just downloaded the tool, the easiest way to start configuring it is to run: kaybee setup which will create a template configuration file in the current folder. You will need to edit it to tailor it to your needs (it contains extensive comments to guide you). At the very least, you will need to configure one or more sources, as in this example: sources: - repo: https://github.com/sap/project-kb branch: master rank: 10","title":"Configuration"},{"location":"getting_started/#retrieving-vulnerability-data","text":"This is achieved with the command: kaybee pull The result will be a local clone of each of the sources. You can manually inspect their content and interact with them as with any other cloned git repository (that is what they are after all). Unless you only consume data from one source, this is not very useful per se: things get more interesting when you use kaybee to merge the content of different sources, which is covered next.","title":"Retrieving vulnerability data"},{"location":"getting_started/#merging-vulnerability-data","text":"The idea underlying project \"KB\" is to allow multiple independent parties to maintain their own vulnerability data repository, and then to allow users to define how the data from these sources is to be aggregated and reconciled. This is achieved with the command: kaybee merge Unless instructed otherwise, the kaybee command will apply a conservative policy (called strict ) which will not attempt to reconcile statements that refer to the same vulnerability. This is still useful in practice if the vulnerabilities covered by different sources are mostly distinct; also, because this policy is very conservative, it is suitable for unattended executions of the tool (say, in a cron job that pulls and merges vulnerability data on a regular basis). Other policies are possible, and at the time of writing (June 2020), an experimental soft policy is under development: this policy will allow statements to be reconciled and their contents to be merged automatically (under certain conditions). The tool can be instructed to use a particular policy by setting the corresponding option in the configuration file, or via the command line flag -p , as in: kaybee merge -p strict kaybee merge -p soft","title":"Merging  vulnerability data"},{"location":"getting_started/#exporting-vulnerability-data","text":"The kaybee export command can be used to export statements to a number of formats. For example, this command: kaybee export -t xml or the equivalent: kaybee export --target xml examines the content of the directory .kaybee/merged , which contains the results of the last run of kaybee merge and exports the statements contained there to XML. It is important to stress that the export capabilities of kaybee are very generic, and allow users to write their own exporters to arbitrary text-based formats (called export targets , hence the -t flag). An example of a completely different export target is steady : kaybee export -t steady or equivavalently: kaybee export --target steady The result this time is a script ( steady.sh ) that can be executed to import vulnerability data to an Eclipse Steady server. To export a folder other than the default, one can use the --from option, like so: kaybee export --target steady --from /path/to/the/statements/you/wish/to/export","title":"Exporting vulnerability data"},{"location":"getting_started/#creating-new-vulnerability-statements","text":"You can use kaybee create to create a skeleton for you to edit. Alternatively, you can take an existing statement as a reference, but this is more tedious and error prone. A check command is planned, to validate a statement. Also, a more user-friendly GUI-based wizard will probably come later on.","title":"Creating new vulnerability statements"},{"location":"getting_started/#publishing","text":"To be written....","title":"Publishing"},{"location":"team/","text":"Coming soon...","title":"Team"},{"location":"user_manual/","text":"User Manual \u00b6 Summary \u00b6 This is the user manual of the kaybee tool, which is part of project KB . WARNING: this document is work in progress. Some of the commands mentioned below might not be fully implemented at this time. Commands \u00b6 create \u00b6 The create command is used to create vulnerability statements. pull \u00b6 The pull command is used to retrieve statements from remote sources to the local machine. merge \u00b6 The merge command is used to aggregate (and possibly reconcile) vulnerability statements coming from different sources. import \u00b6 The import command is used to import vulnerability data from a variety of services/formats, in particular from a Steady backend. export \u00b6 The export command is used to export vulnerability statements to multiple formats. list \u00b6 The list command is used to display the content of statement repositories (remote or local). update \u00b6 The update command is used to check if a newer version of the tool is available, and if so, to update it. version \u00b6 The version command is used to show detailed information about the current version of kaybee . Configuration \u00b6 to be written","title":"User manual"},{"location":"user_manual/#user-manual","text":"","title":"User Manual"},{"location":"user_manual/#summary","text":"This is the user manual of the kaybee tool, which is part of project KB . WARNING: this document is work in progress. Some of the commands mentioned below might not be fully implemented at this time.","title":"Summary"},{"location":"user_manual/#commands","text":"","title":"Commands"},{"location":"user_manual/#create","text":"The create command is used to create vulnerability statements.","title":"create"},{"location":"user_manual/#pull","text":"The pull command is used to retrieve statements from remote sources to the local machine.","title":"pull"},{"location":"user_manual/#merge","text":"The merge command is used to aggregate (and possibly reconcile) vulnerability statements coming from different sources.","title":"merge"},{"location":"user_manual/#import","text":"The import command is used to import vulnerability data from a variety of services/formats, in particular from a Steady backend.","title":"import"},{"location":"user_manual/#export","text":"The export command is used to export vulnerability statements to multiple formats.","title":"export"},{"location":"user_manual/#list","text":"The list command is used to display the content of statement repositories (remote or local).","title":"list"},{"location":"user_manual/#update","text":"The update command is used to check if a newer version of the tool is available, and if so, to update it.","title":"update"},{"location":"user_manual/#version","text":"The version command is used to show detailed information about the current version of kaybee .","title":"version"},{"location":"user_manual/#configuration","text":"to be written","title":"Configuration"}]}